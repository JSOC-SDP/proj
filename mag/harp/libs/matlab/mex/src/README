Source code notes (organization and updating)
Michael Turmon, 2002, 2010

cfitsio/ 

This is a standard fits-reader package, readily available by searching for
cfitsio.  The package is used by mex2c to allow fast, portable binary
interchange of large results.  It provides a superset of the tools we need,
which are basically just reading and writing of multidimensional real
arrays in various word lengths (8 to 64 bits per element).  To upgrade the
version, only the Makefile.in needs to be updated (by propagating a few
lines to the new version).

These routines do not themselves depend on other parts of the package.

mex2c/

These are the central routines.  They provide an interface layer that
reads the command-line input/output specification, calls the 
computational routine, and disposes of the results.  

This interface (mex2c_cli) takes the form of a C main() function and 
associated helpers.  There is a file of shared argument-wrangling utilities 
(mex2c_util.c), and a file of stubs (mex_stubs.c) that implement the
mex API outside of the matlab environment.

There is also a corresponding set of files for a Python/numpy interface,
which works as a shared object file.  The generic driver is pymex.c,
and the stubs are in pymex_stubs.c.

This directory is the place to add another interface mechanism.

These routines depend on header files in the other directories.

util/

This is the directory for modules providing useful general capabilities,
but not pertaining only to the implementation of the mex2c mechanism.
It contains code for -lmexrng (random number generation, not necessarily
only from mex) and -lmextools (generation of IEEE special values, matrix
and array pointer indexing tools, and argument type and value checking).
It also provides a low-level module for input and output of arguments via
strings, which is used by a non-mex program for fits metadata query.

This directory is the place to add in other numerical modules, such as
for linear algebra or statistics.  As mentioned, the modules here should
not be to do with the mex2c mechanism itself.

Some of these routines depend on cfitsio (in a trivial way) and on the 
data structure definitions in mex2c.  

