eval 'exec /home/jsoc/bin/$JSOC_MACHINE/perl -S $0 "$@"'
    if 0;
#/home/jim/cvs/JSOC/src/proj/lev0/scripts/start_ingest_lev0_hmi
#This is to start the ingest_lev0 for 2 VCs for HMI.
#
$| = 1;                 #flush output as we go
$DB = "jsoc";		#the "real" db that production uses
#$DB = "jsocdc";		#the "real" db that production uses
#$GREPPS = "388";	#grep for this in ps -ef
$GREPPS = "jim";
$HOST = "d00.Stanford.EDU"; #where sum_svc runs

$user = $ENV{'USER'};
if($user ne "production") {
  print "You must be user production to run\n";
print "!!!TEMP allow...\n";
  #exit;
}
$host = `hostname`;
chomp($host);
if($host ne $HOST) {
  print "This can only be run on $HOST.\n";
  exit;
}

$PID = getppid;
$LOGFILE = "/tmp/start_ingest_lev0_hmi.$PID";
$MLOGFILE = "/tmp/start_ingest_lev0_mail_hmi.$PID";
open(LOG, ">$LOGFILE") || die "Can't open $LOGFILE: $!\n";
open(MLOG, ">$MLOGFILE") || die "Can't open $MLOGFILE: $!\n";
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$sec2 = sprintf("%02d", $sec);
$min2 = sprintf("%02d", $min);
$hour2 = sprintf("%02d", $hour);
$mday2 = sprintf("%02d", $mday);
$mon2 = sprintf("%02d", $mon+1);
$year2 = sprintf("%02d", $year);
$date = (1900 + $year).".".$mon2.".$mday2"._.$hour2.":$min2".":$sec2";
print "start_ingest_lev0_hmi at $date\n\n";
print LOG "start_ingest_lev0_hmi at $date\n\n";
print MLOG "start_ingest_lev0_hmi at $date\n";
print MLOG "See $LOGFILE for more details\n";

@ps_prod = `ps -ef | grep $GREPPS`;
#print "The ps -ef for producttion is:\n@ps_prod\n";
print LOG "The ps -ef for product is:\n@ps_prod\n";
@process = ();
@psid = ();
$process = "";
while($_ = shift(@ps_prod)) {
  if(/^$GREPPS/) {	#do for all production processes
    if(/start_ingest_lev0_hmi/) { #don't kill ourselves
      next;
    }
    if(/ingest_lev0 -pVC02/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      push(@psid, $psid);
      $process = "ingest_lev0 -pVC02";
      push(@process, $process);
    }
    elsif(/ingest_lev0 -pVC05/) {
      ($a, $psid, $c) = split(/\s+/, $_);
      push(@psid, $psid);
      $process = "ingest_lev0 -pVC05";
      push(@process, $process);
    }
    #elsif(/ingest_lev0 -pVC01/) {
    #  ($a, $psid, $c) = split(/\s+/, $_);
    #  push(@psid, $psid);
    #  $process = "ingest_lev0 -pVC01";
    #  push(@process, $process);
    #}
    #elsif(/ingest_lev0 -pVC04/) {
    #  ($a, $psid, $c) = split(/\s+/, $_);
    #  push(@psid, $psid);
    #  $process = "ingest_lev0 -pVC04";
    #  push(@process, $process);
    #}
    else {
      next;
    }
    print "** NOTE: \"$process\" still running\n";
    print LOG "** NOTE: \"$process\" still running\n";
  }
}
  if($process ne "") {
    print "Do you want me to kill and restart these processes (y or n):\n";
    while(<STDIN>) {
      chop($_);
      if(($_ eq "Y") || ($_ eq "y")) { 
        while($x = shift(@process)) {
          $pid = shift(@psid);
          $cmd = "kill -9 $pid";
          print "Killing $x: $cmd\n";
          `$cmd`;
        }
      }
      else { 
        print "Aborting start_ingest_lev0_hmi\n";
        exit;
      }
    }
  }
        print "** Now starting ingest_lev0_hmi processes\n";
        print LOG "** Now starting ingest_lev0_hmi processes\n";
        $cmd = "ingest_lev0 -pVC02 /dds/socdc/hmi /dds/pipe2pipe/hmi /usr/local/logs/soc/ingest_lev0_VC02.$PID &";
        print "$cmd\n";
        if(system($cmd)) {
          print "Error: failure on cmd\n";
        }
        print "start_ingest_lev0_hmi  Complete\n";
        print LOG "start_ingest_lev0_hmi Complete\n";
        close(LOG);
        close(MLOG);
        $mail = "Mail -s \"start_ingest_lev0_hmi Complete\"";
        #$to = "sssc_crew\@solar2";
        $to = "jim";
        $cmd = "$mail $to < $MLOGFILE";
        system $cmd;
        exit;

