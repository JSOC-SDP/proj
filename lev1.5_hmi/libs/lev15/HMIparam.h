/*----------------------------------------------------------------------------------------------------*/
/* Define some parameters for the HMI optical-filter system                                           */
/*                                                                                                    */
/* parameters common to lookup.c and phasemaps.c                                                      */
/*                                                                                                    */
/*----------------------------------------------------------------------------------------------------*/

#include <jsoc_main.h>         //because it's a JSOC module


//THESE 3 FILES MUST BE RE-CALCULATED AFTER LAUNCH, FLATFIELD IS NEEDED, AND BETTER FSRs ARE NEEDED
//char filephasesnontunable[]="/scr20/couvidat/HMI/non_tunable_phases_710660_June09_cal_256.bin";  //binary file containing the phases of the 4 non-tunable elements, format A[element][row][column],AVERAGE FRONT + SIDE CAMERA, 1020", CALMODE, 256x256, with the phases of the tunable elements obtained from a sunlight sequence 
//char filecontrastsnontunable[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/non_tunable_contrasts_710660_June09_cal_256.bin"; //binary file containing the contrasts of the 4 non-tunable elements A[element][row][column], AVERAGE FRONT+ SIDE CAMERA, 1020", CALMODE, 256x256
char filephasesnontunable[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/non_tunable_phases_710660_June09_cal_256_2.bin";  //binary file containing the phases of the 4 non-tunable elements, format A[element][row][column],AVERAGE FRONT + SIDE CAMERA, 1020", CALMODE, 256x256, with the phases of the tunable elements obtained from an average of the laser detunes
char filecontrastsnontunable[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/non_tunable_contrasts_710660_June09_cal_256_2.bin"; //name of the binary file containing the contrasts of the 4 non-tunable elements A[element][row][column], AVERAGE FRONT+ SIDE CAMERA, 1020", CALMODE, 256x256
char filecontraststunable[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/tunable_contrasts_710660_June09_cal_256.bin";  //binary file containing the contrasts of the 3 tunable elements A[element][row][column], AVERAGE FRONT + SIDE CAMERA, 1020", CALMODE, 256x256
                                                                                                //for these 3 files, there must be values up to a radius = solarradiusmax, and values=zero at larger radii
char filephasesnontunable64[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/non_tunable_phases_710660_June09_cal_64_2.bin";  //binary file containing the phases of the 4 non-tunable elements, format A[element][row][column],AVERAGE FRONT + SIDE CAMERA, 1020", CALMODE, 64x64, with the phases of the tunable elements obtained from an average of the laser detunes
char filecontrastsnontunable64[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/non_tunable_contrasts_710660_June09_cal_64_2.bin"; //binary file containing the contrasts of the 4 non-tunable elements A[element][row][column], AVERAGE FRONT+ SIDE CAMERA, 1020", CALMODE, 64x64
char filecontraststunable64[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/tunable_contrasts_710660_June09_cal_64.bin";  //name of the binary file containing the contrasts of the 3 tunable elements A[element][row][column], AVERAGE FRONT + SIDE CAMERA, 1020", CALMODE, 64x64
                                                                                                //for these 3 files, there must be values up to a radius = solarradiusmax, and values=zero at larger radii


char filephasesnontunable32[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/non_tunable_phases_710660_June09_cal_32_2.bin";  //binary file containing the phases of the 4 non-tunable elements, format A[element][row][column],AVERAGE FRONT + SIDE CAMERA, 1020", CALMODE, 32x32, with the phases of the tunable elements obtained from an average of the laser detunes
char filecontrastsnontunable32[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/non_tunable_contrasts_710660_June09_cal_32_2.bin"; //binary file containing the contrasts of the 4 non-tunable elements A[element][row][column], AVERAGE FRONT+ SIDE CAMERA, 1020", CALMODE, 32x32
char filecontraststunable32[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/tunable_contrasts_710660_June09_cal_32.bin";  //name of the binary file containing the contrasts of the 3 tunable elements A[element][row][column], AVERAGE FRONT + SIDE CAMERA, 1020", CALMODE, 32x32

char filephasesnontunable128[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/non_tunable_phases_710660_June09_cal_128_2.bin";  //binary file containing the phases of the 4 non-tunable elements, format A[element][row][column],AVERAGE FRONT + SIDE CAMERA, 1020", CALMODE, 128x128, with the phases of the tunable elements obtained from an average of the laser detunes
char filecontrastsnontunable128[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/non_tunable_contrasts_710660_June09_cal_128_2.bin"; //binary file containing the contrasts of the 4 non-tunable elements A[element][row][column], AVERAGE FRONT+ SIDE CAMERA, 1020", CALMODE, 128x128
char filecontraststunable128[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/tunable_contrasts_710660_June09_cal_128.bin";  //name of the binary file containing the contrasts of the 3 tunable elements A[element][row][column], AVERAGE FRONT + SIDE CAMERA, 1020", CALMODE, 128x128
 



char referencesolarline[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/ReferenceFeLine.bin";         //solar line DECONVOLVED of R. Ulrich at disk center and zero velocity, interpolated on a very fine grid with Fourier interpolation, and centered (7000 points, dlam=0.0001 A), binary file, single precision (float)
char referencewavelength[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/ReferenceWavelength.bin" ;    //wavelength grid for the solar line, binary file, single precision (float)
int  referencenlam=7000;                                                                               //number of wavelengths
//char referencesolarline[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/ReferenceFeLine2.bin";         //solar line STILL CONVOLVED of R. Ulrich at disk center and zero velocity, interpolated on a very fine grid with Fourier interpolation, and centered (7993 points, dlam=0.0001 A), binary file, single precision (float)
//char referencewavelength[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/ReferenceWavelength2.bin" ;    //wavelength grid for the solar line, binary file, single precision (float)
//int  referencenlam=7993;         
//char referencesolarline[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/ReferenceFeLine3.bin";          //solar line of Kitt Peaks at disk center and zero velocity, interpolated on a very fine grid with linear interpolation, and centered (19995 points, dlam=0.0001 A), binary file, single precision (float)
//char referencewavelength[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/ReferenceWavelength3.bin" ;    //wavelength grid for the solar line, binary file, single precision (float)
//int  referencenlam=19995;
//char referencesolarline[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/ReferenceFeLine4.bin";          //solar line of Kitt Peaks at disk center and zero velocity, FULL RANGE INCLUDING OTHER LINES, and centered (16001 points, dlam=0.000494209 A), binary file, single precision (float)
//char referencewavelength[]="/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps/ReferenceWavelength4.bin" ;    //wavelength grid for the solar line, binary file, single precision (float)
//int  referencenlam=16001;




float MISSINGDATA=NAN;         //value given to a missing datum of type FLOAT (filtergrams)
float MISSINGKEYWORDINT=-32768;//value given to a missing keyword of type INT
float MISSINGKEYWORD= -100000.0;    //value given to a missing keyword of type FLOAT or DOUBLE
float MISSINGRESULT=NAN;     //value given to a pixel for which no Doppler velocity or l.o.s. field strength could be computed.
float CROPRADIUS = 2048.;      //crop radius for the masks of gapfilling function, in pixels

double lam0   = 6173.3433; //Fe I line central wavelength in vacuum at rest (Davis, Lindegren, & Nordlund, 1981)
//double FSR[7] = {0.172-0.0010576,0.344-0.00207683,0.693+0.000483467,1.407,2.779,5.682,11.354};             //FSR of the HMI filter elements in Angstroms; pre-launch
//double FSR[7] = {0.169,0.337,0.695,1.407,2.779,5.682,11.354}; //FSR from launch time to June 18,2010
double FSR[7] = {0.1689,0.33685,0.695,1.417,2.779,5.682,11.354};
//double FSR[7] = {0.171210,0.341900,0.683500,1.432000,2.829000,5.682000,11.35400}; //FSRs after June 18, 2010
int nx2       = 128;      //number of columns of phase and contrast maps, and of look-up tables
int ny2       = 128;      //number of rows of phase and contrast maps, and of look-up tables
int nelement  = 3;        //number of tunable HMI elements
const int ntest= 821;     //621. number of test velocities to produce the look-up tables; MUST BE ODD BECAUSE FOR THE NUMERICAL INTEGRATION WE USE SIMPSON'S RULE FOR EVEN NUMBER OF INTERVALS
double dvtest  = 24.;      //in m/s
float vtestmax = 7500.;   //maximum vtest value
const int maxNx   = 256;  //maximum number of columns for the look-up tables 
const int nfront  = 401;
const int nblocker= 201;
const float centerblocker= 2.7; //2.6; //3.20854;     //center of the blocking filter S/N 11 in Angstroms
double dlamdv = 2.059205672212074294E-5; //conversion factor from velocity to wavelength at target wavelength of 6173.3433 Angstrom
int nline     = 69;
float solarradiustable = 976.22;        //maximum radius of computation of the look-up tables = MAX RADIUS OF THE SUN SEEN FROM HMI, in arcsec
int numberoffiltergrams = 24 ;          //number of filtergrams in a cotune sequence
int numberoffiltergramsused = 12;       //number of filtergrams in a cotune sequence that are actually used to calculate the observables Doppler velocity and l.o.s. magnetic field
int numberoffiltergrams_detune = 60 ;   //number of filtergrams in a detune sequence: 60 because it's detune27 with both cameras and 3 dark frames
float solar_radius = 696000000.0   ;    //solar radius in meters (SAME AS RSUN_REF KEYWORD IN lev1.5 DATA) 
float AstroUnit = 149597870691.0 ;      //1 AU (SAME AS DSUN_REF KEYWORD IN lev1.5 DATA)
float phaseguess[3]={-131.,12.,-140.}; //guess of the phases of the tunable elements for the phasemaps.c module
double depth0      = 0.66;//0.52;                      //guess for the Fe I linedepth for the phasemaps.c module
double width0      = 0.069;//0.073;                     //guess for the Fe I linewidth in Angstroms for the phasemaps.c module
double thresh      = 750000;                    //guess for the solar continuum intensity for the phasemaps.c and phasemaps2.c modules
//THE FOLLOWING VARIABLES HAVE VALUES THAT HAVE NOT BEEN THOUGHT THROUGH: NEED TO CHECK THEM!!!!!
float MINRSUN = 0.    ;                         //minimum value of Rsun in pixels considered normal for R_SUN keyword
float MAXRSUN = 2048. ;                         //maximum value of Rsun in pixels considered normal for R_SUN keyword
float XYMIN   = 0.    ;                         //minimum value of X0 AND Y0 (Sun's center) in pixels, considered normal
float XYMAX   = 4095. ;                         //maximum value of X0 AND Y0 (Sun's center) in pixels, considered normal
double NOMINALSCALE=0.503;                      //scale used for the production of phase maps in Calmode and look-up tables for MDI-like algorithm(0.503" per pixel)

struct parameterDoppler {                       //structure to provide some parameters defined in HMIparam.h to Dopplergram()
  double FSRNB;
  double FSRWB;
  double FSRE1;
  double FSRE2;
  double FSRE3;
  double FSRE4;
  double FSRE5;
  double dlamdv;
  int maxVtest;
  int maxNx;
  int ntest;
  double dvtest;
  float MISSINGDATA;
  float MISSINGRESULT;
};


//BLOCKER FILTER S/N 11 TRANSMISSION PROFILE (from blocker11.txt)
float  wavelengthb[201]={6150.00,6150.20,6150.40,6150.60,6150.80,6151.00,6151.20,6151.40,6151.60,6151.80,6152.00,6152.20,6152.40,6152.60,6152.80,6153.00,6153.20,6153.40,6153.60,6153.80,6154.00,6154.20,6154.40,6154.60,6154.80,6155.00,6155.20,6155.40,6155.60,6155.80,6156.00,6156.20,6156.40,6156.60,6156.80,6157.00,6157.20,6157.40,6157.60,6157.80,6158.00,6158.20,6158.40,6158.60,6158.80,6159.00,6159.20,6159.40,6159.60,6159.80,6160.00,6160.20,6160.40,6160.60,6160.80,6161.00,6161.20,6161.40,6161.60,6161.80,6162.00,6162.20,6162.40,6162.60,6162.80,6163.00,6163.20,6163.40,6163.60,6163.80,6164.00,6164.20,6164.40,6164.60,6164.80,6165.00,6165.20,6165.40,6165.60,6165.80,6166.00,6166.20,6166.40,6166.60,6166.80,6167.00,6167.20,6167.40,6167.60,6167.80,6168.00,6168.20,6168.40,6168.60,6168.80,6169.00,6169.20,6169.40,6169.60,6169.80,6170.00,6170.20,6170.40,6170.60,6170.80,6171.00,6171.20,6171.40,6171.60,6171.80,6172.00,6172.20,6172.40,6172.60,6172.80,6173.00,6173.20,6173.40,6173.60,6173.80,6174.00,6174.20,6174.40,6174.60,6174.80,6175.00,6175.20,6175.40,6175.60,6175.80,6176.00,6176.20,6176.40,6176.60,6176.80,6177.00,6177.20,6177.40,6177.60,6177.80,6178.00,6178.20,6178.40,6178.60,6178.80,6179.00,6179.20,6179.40,6179.60,6179.80,6180.00,6180.20,6180.40,6180.60,6180.80,6181.00,6181.20,6181.40,6181.60,6181.80,6182.00,6182.20,6182.40,6182.60,6182.80,6183.00,6183.20,6183.40,6183.60,6183.80,6184.00,6184.20,6184.40,6184.60,6184.80,6185.00,6185.20,6185.40,6185.60,6185.80,6186.00,6186.20,6186.40,6186.60,6186.80,6187.00,6187.20,6187.40,6187.60,6187.80,6188.00,6188.20,6188.40,6188.60,6188.80,6189.00,6189.20,6189.40,6189.60,6189.80,6190.00};

float  blocker[201]={0.0701790,0.0723149,0.0747684,0.0713996,0.0782131,0.0758304,0.0789970,0.0762436,0.0806648,0.0828427,0.0801553,0.0830996,0.0882834,0.0885202,0.0869452,0.0877748,0.0974292,0.0942963,0.0968998,0.0961026,0.100459,0.104028,0.102757,0.107549,0.111349,0.120277,0.117723,0.127142,0.125108,0.135901,0.146540,0.148481,0.151049,0.161267,0.173912,0.191953,0.204322,0.227430,0.239466,0.255259,0.272536,0.311694,0.341673,0.356651,0.409127,0.452214,0.535866,0.614547,0.667113,0.740491,0.847670,0.958023,1.05927,1.19029,1.33457,1.51771,1.90178,2.28149,2.49949,2.80167,3.20520,3.85124,4.35895,4.98798,5.73421,6.53362,8.32412,9.85849,10.6749,12.2367,13.5532,16.0578,17.5336,19.9408,21.4035,26.3633,28.4878,31.9405,33.4455,36.0767,38.4715,42.1947,44.3560,46.8881,49.1468,51.3640,54.9618,57.0772,58.2497,59.3955,60.7570,62.1459,62.7333,63.6812,64.1301,64.7157,65.1849,65.6286,65.4660,65.5828,65.4650,65.4184,65.0766,64.7526,64.0896,63.4954,62.1029,60.4464,59.8266,58.1582,57.0750,54.6480,53.1968,51.1148,49.0429,46.5159,42.3256,38.8035,37.2384,34.5975,32.0762,28.5152,26.2661,23.6695,21.7173,17.3033,15.3031,13.0296,11.8265,10.3604,9.23128,7.53426,6.70699,5.79359,4.97535,4.35803,3.27063,2.70147,2.42119,2.11748,1.83017,1.53329,1.34299,1.19612,1.02633,0.915612,0.711036,0.622389,0.575185,0.507517,0.450262,0.401576,0.365934,0.322949,0.286864,0.272241,0.232461,0.207537,0.189114,0.173546,0.161978,0.152099,0.134795,0.123677,0.110288,0.108344,0.0948288,0.0818621,0.0804488,0.0753219,0.0693417,0.0643225,0.0620898,0.0559437,0.0540745,0.0485797,0.0486797,0.0432530,0.0439143,0.0401164,0.0367754,0.0359879,0.0343058,0.0336281,0.0330711,0.0339798,0.0271329,0.0281424,0.0299408,0.0264017,0.0278133,0.0250958,0.0248676,0.0223389,0.0238825,0.0259792,0.0226330,0.0204282,0.0209307,0.0207487,0.0209464};

double  wavelengthbd[201]={6150.00,6150.20,6150.40,6150.60,6150.80,6151.00,6151.20,6151.40,6151.60,6151.80,6152.00,6152.20,6152.40,6152.60,6152.80,6153.00,6153.20,6153.40,6153.60,6153.80,6154.00,6154.20,6154.40,6154.60,6154.80,6155.00,6155.20,6155.40,6155.60,6155.80,6156.00,6156.20,6156.40,6156.60,6156.80,6157.00,6157.20,6157.40,6157.60,6157.80,6158.00,6158.20,6158.40,6158.60,6158.80,6159.00,6159.20,6159.40,6159.60,6159.80,6160.00,6160.20,6160.40,6160.60,6160.80,6161.00,6161.20,6161.40,6161.60,6161.80,6162.00,6162.20,6162.40,6162.60,6162.80,6163.00,6163.20,6163.40,6163.60,6163.80,6164.00,6164.20,6164.40,6164.60,6164.80,6165.00,6165.20,6165.40,6165.60,6165.80,6166.00,6166.20,6166.40,6166.60,6166.80,6167.00,6167.20,6167.40,6167.60,6167.80,6168.00,6168.20,6168.40,6168.60,6168.80,6169.00,6169.20,6169.40,6169.60,6169.80,6170.00,6170.20,6170.40,6170.60,6170.80,6171.00,6171.20,6171.40,6171.60,6171.80,6172.00,6172.20,6172.40,6172.60,6172.80,6173.00,6173.20,6173.40,6173.60,6173.80,6174.00,6174.20,6174.40,6174.60,6174.80,6175.00,6175.20,6175.40,6175.60,6175.80,6176.00,6176.20,6176.40,6176.60,6176.80,6177.00,6177.20,6177.40,6177.60,6177.80,6178.00,6178.20,6178.40,6178.60,6178.80,6179.00,6179.20,6179.40,6179.60,6179.80,6180.00,6180.20,6180.40,6180.60,6180.80,6181.00,6181.20,6181.40,6181.60,6181.80,6182.00,6182.20,6182.40,6182.60,6182.80,6183.00,6183.20,6183.40,6183.60,6183.80,6184.00,6184.20,6184.40,6184.60,6184.80,6185.00,6185.20,6185.40,6185.60,6185.80,6186.00,6186.20,6186.40,6186.60,6186.80,6187.00,6187.20,6187.40,6187.60,6187.80,6188.00,6188.20,6188.40,6188.60,6188.80,6189.00,6189.20,6189.40,6189.60,6189.80,6190.00};

double  blockerd[201]={0.0701790,0.0723149,0.0747684,0.0713996,0.0782131,0.0758304,0.0789970,0.0762436,0.0806648,0.0828427,0.0801553,0.0830996,0.0882834,0.0885202,0.0869452,0.0877748,0.0974292,0.0942963,0.0968998,0.0961026,0.100459,0.104028,0.102757,0.107549,0.111349,0.120277,0.117723,0.127142,0.125108,0.135901,0.146540,0.148481,0.151049,0.161267,0.173912,0.191953,0.204322,0.227430,0.239466,0.255259,0.272536,0.311694,0.341673,0.356651,0.409127,0.452214,0.535866,0.614547,0.667113,0.740491,0.847670,0.958023,1.05927,1.19029,1.33457,1.51771,1.90178,2.28149,2.49949,2.80167,3.20520,3.85124,4.35895,4.98798,5.73421,6.53362,8.32412,9.85849,10.6749,12.2367,13.5532,16.0578,17.5336,19.9408,21.4035,26.3633,28.4878,31.9405,33.4455,36.0767,38.4715,42.1947,44.3560,46.8881,49.1468,51.3640,54.9618,57.0772,58.2497,59.3955,60.7570,62.1459,62.7333,63.6812,64.1301,64.7157,65.1849,65.6286,65.4660,65.5828,65.4650,65.4184,65.0766,64.7526,64.0896,63.4954,62.1029,60.4464,59.8266,58.1582,57.0750,54.6480,53.1968,51.1148,49.0429,46.5159,42.3256,38.8035,37.2384,34.5975,32.0762,28.5152,26.2661,23.6695,21.7173,17.3033,15.3031,13.0296,11.8265,10.3604,9.23128,7.53426,6.70699,5.79359,4.97535,4.35803,3.27063,2.70147,2.42119,2.11748,1.83017,1.53329,1.34299,1.19612,1.02633,0.915612,0.711036,0.622389,0.575185,0.507517,0.450262,0.401576,0.365934,0.322949,0.286864,0.272241,0.232461,0.207537,0.189114,0.173546,0.161978,0.152099,0.134795,0.123677,0.110288,0.108344,0.0948288,0.0818621,0.0804488,0.0753219,0.0693417,0.0643225,0.0620898,0.0559437,0.0540745,0.0485797,0.0486797,0.0432530,0.0439143,0.0401164,0.0367754,0.0359879,0.0343058,0.0336281,0.0330711,0.0339798,0.0271329,0.0281424,0.0299408,0.0264017,0.0278133,0.0250958,0.0248676,0.0223389,0.0238825,0.0259792,0.0226330,0.0204282,0.0209307,0.0207487,0.0209464};


//FRONT WINDOW S/N 3 TRANSMISSION PROFILE (from frontwindow3.txt)
float  wavelengthf[401]={607.300,607.350,607.400,607.450,607.500,607.550,607.600,607.650,607.700,607.750,607.800,607.850,607.900,607.950,608.000,608.050,608.100,608.150,608.200,608.250,608.300,608.350,608.400,608.450,608.500,608.550,608.600,608.650,608.700,608.750,608.800,608.850,608.900,608.950,609.000,609.050,609.100,609.150,609.200,609.250,609.300,609.350,609.400,609.450,609.500,609.550,609.600,609.650,609.700,609.750,609.800,609.850,609.900,609.950,610.000,610.050,610.100,610.150,610.200,610.250,610.300,610.350,610.400,610.450,610.500,610.550,610.600,610.650,610.700,610.750,610.800,610.850,610.900,610.950,611.000,611.050,611.100,611.150,611.200,611.250,611.300,611.350,611.400,611.450,611.500,611.550,611.600,611.650,611.700,611.750,611.800,611.850,611.900,611.950,612.000,612.050,612.100,612.150,612.200,612.250,612.300,612.350,612.400,612.450,612.500,612.550,612.600,612.650,612.700,612.750,612.800,612.850,612.900,612.950,613.000,613.050,613.100,613.150,613.200,613.250,613.300,613.350,613.400,613.450,613.500,613.550,613.600,613.650,613.700,613.750,613.800,613.850,613.900,613.950,614.000,614.050,614.100,614.150,614.200,614.250,614.300,614.350,614.400,614.450,614.500,614.550,614.600,614.650,614.700,614.750,614.800,614.850,614.900,614.950,615.000,615.050,615.100,615.150,615.200,615.250,615.300,615.350,615.400,615.450,615.500,615.550,615.600,615.650,615.700,615.750,615.800,615.850,615.900,615.950,616.000,616.050,616.100,616.150,616.200,616.250,616.300,616.350,616.400,616.450,616.500,616.550,616.600,616.650,616.700,616.750,616.800,616.850,616.900,616.950,617.000,617.050,617.100,617.150,617.200,617.250,617.300,617.350,617.400,617.450,617.500,617.550,617.600,617.650,617.700,617.750,617.800,617.850,617.900,617.950,618.000,618.050,618.100,618.150,618.200,618.250,618.300,618.350,618.400,618.450,618.500,618.550,618.600,618.650,618.700,618.750,618.800,618.850,618.900,618.950,619.000,619.050,619.100,619.150,619.200,619.250,619.300,619.350,619.400,619.450,619.500,619.550,619.600,619.650,619.700,619.750,619.800,619.850,619.900,619.950,620.000,620.050,620.100,620.150,620.200,620.250,620.300,620.350,620.400,620.450,620.500,620.550,620.600,620.650,620.700,620.750,620.800,620.850,620.900,620.950,621.000,621.050,621.100,621.150,621.200,621.250,621.300,621.350,621.400,621.450,621.500,621.550,621.600,621.650,621.700,621.750,621.800,621.850,621.900,621.950,622.000,622.050,622.100,622.150,622.200,622.250,622.300,622.350,622.400,622.450,622.500,622.550,622.600,622.650,622.700,622.750,622.800,622.850,622.900,622.950,623.000,623.050,623.100,623.150,623.200,623.250,623.300,623.350,623.400,623.450,623.500,623.550,623.600,623.650,623.700,623.750,623.800,623.850,623.900,623.950,624.000,624.050,624.100,624.150,624.200,624.250,624.300,624.350,624.400,624.450,624.500,624.550,624.600,624.650,624.700,624.750,624.800,624.850,624.900,624.950,625.000,625.050,625.100,625.150,625.200,625.250,625.300,625.350,625.400,625.450,625.500,625.550,625.600,625.650,625.700,625.750,625.800,625.850,625.900,625.950,626.000,626.050,626.100,626.150,626.200,626.250,626.300,626.350,626.400,626.450,626.500,626.550,626.600,626.650,626.700,626.750,626.800,626.850,626.900,626.950,627.000,627.050,627.100,627.150,627.200,627.250,627.300};

float  frontwindow[401]={0.0824,0.0939,0.0787,0.1035,0.0712,0.0794,0.1009,0.0841,0.0889,0.0439,0.0884,0.1057,0.1161,0.0858,0.0717,0.1085,0.0939,0.1030,0.1027,0.0805,0.0831,0.1088,0.1005,0.0767,0.0920,0.0755,0.0862,0.1045,0.1125,0.1068,0.0964,0.1106,0.1134,0.0919,0.1147,0.1105,0.1171,0.1166,0.0975,0.1113,0.1094,0.1317,0.1379,0.1335,0.1444,0.1323,0.1103,0.1487,0.1564,0.1551,0.1550,0.1705,0.1672,0.1258,0.1330,0.1428,0.1620,0.1656,0.1843,0.1940,0.1811,0.1908,0.1628,0.1760,0.2049,0.1959,0.2186,0.2341,0.2504,0.2322,0.2292,0.2409,0.2355,0.2490,0.2984,0.2840,0.2854,0.2927,0.2823,0.3015,0.3269,0.3337,0.3787,0.3949,0.3853,0.3833,0.4298,0.4670,0.4692,0.4981,0.5129,0.5428,0.5865,0.6077,0.6290,0.6324,0.7459,0.7480,0.8150,0.8657,0.8920,0.9285,1.0100,1.0616,1.1343,1.2479,1.2852,1.3584,1.4890,1.5699,1.6990,1.8128,1.9565,2.1121,2.2822,2.4738,2.6485,2.9025,3.1073,3.3880,3.6499,3.9427,4.3108,4.6652,4.9989,5.5283,5.9813,6.5033,7.1314,7.7739,8.3984,9.1871,10.0736,10.8755,11.9132,13.0402,13.9753,15.3119,16.5884,17.9287,19.5970,21.4054,22.8304,24.9109,27.0054,28.6829,30.9226,33.2495,35.3898,37.8594,40.3831,42.7200,44.9671,47.5569,49.9864,52.2030,54.7069,57.0780,58.8828,60.8594,62.6620,64.4119,66.2320,68.2963,69.4221,70.8045,72.2034,73.4397,74.4796,75.5385,76.0362,76.8120,77.7408,78.4357,78.7422,79.3253,79.8358,80.3452,80.8023,80.7372,81.0416,81.5797,81.9136,82.0703,82.4872,82.4652,82.5696,82.6470,82.7640,82.8444,82.7465,82.4404,82.6908,82.8926,83.1894,83.3542,83.3569,83.2381,83.3289,83.2983,83.3072,83.4495,83.3260,83.3259,83.2807,83.1566,83.0003,82.8881,82.8700,83.2338,83.6685,83.5310,83.3660,83.4200,83.4753,83.5535,83.4297,83.5024,83.3255,83.3739,83.2229,83.0138,82.7990,83.0881,82.8699,82.5380,82.4950,82.2752,81.6813,81.0162,80.4859,79.8935,79.0734,78.1775,77.1055,75.6790,73.7593,72.1025,70.1430,67.8169,65.3109,62.7376,59.8977,56.6526,53.3823,50.7530,47.4383,43.8974,40.5806,37.9460,34.8128,31.9024,29.1972,26.9859,24.4400,22.1973,20.2288,18.4441,16.6123,14.9844,13.5245,12.4264,11.2253,10.1547,9.2421,8.5064,7.7160,6.9712,6.3549,5.8530,5.3515,4.8613,4.4704,4.1431,3.7857,3.4459,3.1822,2.9684,2.7397,2.5416,2.3371,2.1395,2.0216,1.8965,1.7565,1.6370,1.5414,1.4241,1.3505,1.2548,1.1747,1.1431,1.0586,0.9672,0.9421,0.8876,0.8538,0.8146,0.7764,0.7325,0.6940,0.6494,0.6119,0.6018,0.5367,0.5330,0.5568,0.5291,0.4903,0.4759,0.4601,0.4422,0.3874,0.3670,0.3589,0.3565,0.3655,0.3273,0.3272,0.3035,0.3008,0.3135,0.2618,0.2653,0.2760,0.2466,0.2407,0.2260,0.2107,0.2255,0.2064,0.2066,0.1937,0.1648,0.1614,0.1906,0.1738,0.1403,0.1535,0.1480,0.1581,0.1243,0.1326,0.1140,0.1280,0.1621,0.1404,0.1348,0.1110,0.1075,0.1022,0.1140,0.1186,0.1072,0.1250,0.1132,0.1193,0.0794,0.0808,0.0930,0.0886,0.0693,0.0934,0.0827,0.0644,0.0723,0.0732,0.0574,0.0606,0.0555,0.0536,0.0540,0.0625,0.0444,0.0616,0.0663,0.0506,0.0506,0.0492,0.0294,0.0661,0.0511,0.0556,0.0188,0.0257,0.0414,0.0484,0.0167,0.0341,0.0216,0.0269,0.0308,0.0451,0.0700,0.0326,0.0110,0.0288,0.0414,0.0225,0.0119,0.0509};


double  wavelengthd[401]={607.300,607.350,607.400,607.450,607.500,607.550,607.600,607.650,607.700,607.750,607.800,607.850,607.900,607.950,608.000,608.050,608.100,608.150,608.200,608.250,608.300,608.350,608.400,608.450,608.500,608.550,608.600,608.650,608.700,608.750,608.800,608.850,608.900,608.950,609.000,609.050,609.100,609.150,609.200,609.250,609.300,609.350,609.400,609.450,609.500,609.550,609.600,609.650,609.700,609.750,609.800,609.850,609.900,609.950,610.000,610.050,610.100,610.150,610.200,610.250,610.300,610.350,610.400,610.450,610.500,610.550,610.600,610.650,610.700,610.750,610.800,610.850,610.900,610.950,611.000,611.050,611.100,611.150,611.200,611.250,611.300,611.350,611.400,611.450,611.500,611.550,611.600,611.650,611.700,611.750,611.800,611.850,611.900,611.950,612.000,612.050,612.100,612.150,612.200,612.250,612.300,612.350,612.400,612.450,612.500,612.550,612.600,612.650,612.700,612.750,612.800,612.850,612.900,612.950,613.000,613.050,613.100,613.150,613.200,613.250,613.300,613.350,613.400,613.450,613.500,613.550,613.600,613.650,613.700,613.750,613.800,613.850,613.900,613.950,614.000,614.050,614.100,614.150,614.200,614.250,614.300,614.350,614.400,614.450,614.500,614.550,614.600,614.650,614.700,614.750,614.800,614.850,614.900,614.950,615.000,615.050,615.100,615.150,615.200,615.250,615.300,615.350,615.400,615.450,615.500,615.550,615.600,615.650,615.700,615.750,615.800,615.850,615.900,615.950,616.000,616.050,616.100,616.150,616.200,616.250,616.300,616.350,616.400,616.450,616.500,616.550,616.600,616.650,616.700,616.750,616.800,616.850,616.900,616.950,617.000,617.050,617.100,617.150,617.200,617.250,617.300,617.350,617.400,617.450,617.500,617.550,617.600,617.650,617.700,617.750,617.800,617.850,617.900,617.950,618.000,618.050,618.100,618.150,618.200,618.250,618.300,618.350,618.400,618.450,618.500,618.550,618.600,618.650,618.700,618.750,618.800,618.850,618.900,618.950,619.000,619.050,619.100,619.150,619.200,619.250,619.300,619.350,619.400,619.450,619.500,619.550,619.600,619.650,619.700,619.750,619.800,619.850,619.900,619.950,620.000,620.050,620.100,620.150,620.200,620.250,620.300,620.350,620.400,620.450,620.500,620.550,620.600,620.650,620.700,620.750,620.800,620.850,620.900,620.950,621.000,621.050,621.100,621.150,621.200,621.250,621.300,621.350,621.400,621.450,621.500,621.550,621.600,621.650,621.700,621.750,621.800,621.850,621.900,621.950,622.000,622.050,622.100,622.150,622.200,622.250,622.300,622.350,622.400,622.450,622.500,622.550,622.600,622.650,622.700,622.750,622.800,622.850,622.900,622.950,623.000,623.050,623.100,623.150,623.200,623.250,623.300,623.350,623.400,623.450,623.500,623.550,623.600,623.650,623.700,623.750,623.800,623.850,623.900,623.950,624.000,624.050,624.100,624.150,624.200,624.250,624.300,624.350,624.400,624.450,624.500,624.550,624.600,624.650,624.700,624.750,624.800,624.850,624.900,624.950,625.000,625.050,625.100,625.150,625.200,625.250,625.300,625.350,625.400,625.450,625.500,625.550,625.600,625.650,625.700,625.750,625.800,625.850,625.900,625.950,626.000,626.050,626.100,626.150,626.200,626.250,626.300,626.350,626.400,626.450,626.500,626.550,626.600,626.650,626.700,626.750,626.800,626.850,626.900,626.950,627.000,627.050,627.100,627.150,627.200,627.250,627.300};

double  frontwindowd[401]={0.0824,0.0939,0.0787,0.1035,0.0712,0.0794,0.1009,0.0841,0.0889,0.0439,0.0884,0.1057,0.1161,0.0858,0.0717,0.1085,0.0939,0.1030,0.1027,0.0805,0.0831,0.1088,0.1005,0.0767,0.0920,0.0755,0.0862,0.1045,0.1125,0.1068,0.0964,0.1106,0.1134,0.0919,0.1147,0.1105,0.1171,0.1166,0.0975,0.1113,0.1094,0.1317,0.1379,0.1335,0.1444,0.1323,0.1103,0.1487,0.1564,0.1551,0.1550,0.1705,0.1672,0.1258,0.1330,0.1428,0.1620,0.1656,0.1843,0.1940,0.1811,0.1908,0.1628,0.1760,0.2049,0.1959,0.2186,0.2341,0.2504,0.2322,0.2292,0.2409,0.2355,0.2490,0.2984,0.2840,0.2854,0.2927,0.2823,0.3015,0.3269,0.3337,0.3787,0.3949,0.3853,0.3833,0.4298,0.4670,0.4692,0.4981,0.5129,0.5428,0.5865,0.6077,0.6290,0.6324,0.7459,0.7480,0.8150,0.8657,0.8920,0.9285,1.0100,1.0616,1.1343,1.2479,1.2852,1.3584,1.4890,1.5699,1.6990,1.8128,1.9565,2.1121,2.2822,2.4738,2.6485,2.9025,3.1073,3.3880,3.6499,3.9427,4.3108,4.6652,4.9989,5.5283,5.9813,6.5033,7.1314,7.7739,8.3984,9.1871,10.0736,10.8755,11.9132,13.0402,13.9753,15.3119,16.5884,17.9287,19.5970,21.4054,22.8304,24.9109,27.0054,28.6829,30.9226,33.2495,35.3898,37.8594,40.3831,42.7200,44.9671,47.5569,49.9864,52.2030,54.7069,57.0780,58.8828,60.8594,62.6620,64.4119,66.2320,68.2963,69.4221,70.8045,72.2034,73.4397,74.4796,75.5385,76.0362,76.8120,77.7408,78.4357,78.7422,79.3253,79.8358,80.3452,80.8023,80.7372,81.0416,81.5797,81.9136,82.0703,82.4872,82.4652,82.5696,82.6470,82.7640,82.8444,82.7465,82.4404,82.6908,82.8926,83.1894,83.3542,83.3569,83.2381,83.3289,83.2983,83.3072,83.4495,83.3260,83.3259,83.2807,83.1566,83.0003,82.8881,82.8700,83.2338,83.6685,83.5310,83.3660,83.4200,83.4753,83.5535,83.4297,83.5024,83.3255,83.3739,83.2229,83.0138,82.7990,83.0881,82.8699,82.5380,82.4950,82.2752,81.6813,81.0162,80.4859,79.8935,79.0734,78.1775,77.1055,75.6790,73.7593,72.1025,70.1430,67.8169,65.3109,62.7376,59.8977,56.6526,53.3823,50.7530,47.4383,43.8974,40.5806,37.9460,34.8128,31.9024,29.1972,26.9859,24.4400,22.1973,20.2288,18.4441,16.6123,14.9844,13.5245,12.4264,11.2253,10.1547,9.2421,8.5064,7.7160,6.9712,6.3549,5.8530,5.3515,4.8613,4.4704,4.1431,3.7857,3.4459,3.1822,2.9684,2.7397,2.5416,2.3371,2.1395,2.0216,1.8965,1.7565,1.6370,1.5414,1.4241,1.3505,1.2548,1.1747,1.1431,1.0586,0.9672,0.9421,0.8876,0.8538,0.8146,0.7764,0.7325,0.6940,0.6494,0.6119,0.6018,0.5367,0.5330,0.5568,0.5291,0.4903,0.4759,0.4601,0.4422,0.3874,0.3670,0.3589,0.3565,0.3655,0.3273,0.3272,0.3035,0.3008,0.3135,0.2618,0.2653,0.2760,0.2466,0.2407,0.2260,0.2107,0.2255,0.2064,0.2066,0.1937,0.1648,0.1614,0.1906,0.1738,0.1403,0.1535,0.1480,0.1581,0.1243,0.1326,0.1140,0.1280,0.1621,0.1404,0.1348,0.1110,0.1075,0.1022,0.1140,0.1186,0.1072,0.1250,0.1132,0.1193,0.0794,0.0808,0.0930,0.0886,0.0693,0.0934,0.0827,0.0644,0.0723,0.0732,0.0574,0.0606,0.0555,0.0536,0.0540,0.0625,0.0444,0.0616,0.0663,0.0506,0.0506,0.0492,0.0294,0.0661,0.0511,0.0556,0.0188,0.0257,0.0414,0.0484,0.0167,0.0341,0.0216,0.0269,0.0308,0.0451,0.0700,0.0326,0.0110,0.0288,0.0414,0.0225,0.0119,0.0509};



//solar Fe I line profiles provided by Roger Ulrich at different angular distances from disk center
float wavelengthbis[98] = {-0.475470,-0.465460,-0.455450,-0.445440,-0.435430,-0.425420,-0.415410,-0.405400,-0.395390,-0.385380,-0.375370,-0.365360,-0.355350,-0.345340,-0.335330,-0.325320,-0.315310,-0.305300,-0.295290,-0.285280,-0.275270,-0.265260,-0.255250,-0.245240,-0.235230,-0.225220,-0.215210,-0.205200,-0.195190,-0.185180,-0.175170,-0.165160,-0.155150,-0.145140,-0.135130,-0.125120,-0.115110,-0.105100,-0.0950900,-0.0850800,-0.0750700,-0.0650600,-0.0550500,-0.0450400,-0.0350300,-0.0250200,-0.0150100,-0.00500000,0.00501000,0.0150200,0.0250300,0.0350400,0.0450500,0.0550600,0.0650700,0.0750800,0.0850900,0.0951000,0.105110,0.115120,0.125130,0.135140,0.145150,0.155160,0.165170,0.175180,0.185190,0.195200,0.205210,0.215220,0.225230,0.235240,0.245250,0.255260,0.265270,0.275280,0.285290,0.295300,0.305310,0.315320,0.325330,0.335340,0.345350,0.355360,0.365370,0.375380,0.385390,0.395400,0.405410,0.415420,0.425430,0.435440,0.445450,0.455460,0.465470,0.475480,0.485490,0.495500};

float lineprofile0bis[98] ={1.00447,1.00444,1.00501,1.00508,1.00511,1.00511,1.00509,1.00508,1.00473,1.00401,1.00340,1.00269,1.00174,1.00009,0.998082,0.996317,0.994873,0.993968,0.993783,0.993825,0.994025,0.994263,0.994643,0.994890,0.995349,0.995453,0.995142,0.994554,0.994067,0.993847,0.993929,0.993886,0.994019,0.993814,0.993427,0.992296,0.989101,0.980927,0.964652,0.935828,0.889673,0.823512,0.739270,0.643219,0.544847,0.456429,0.388372,0.347983,0.342219,0.375538,0.447979,0.550264,0.662702,0.764941,0.843935,0.896826,0.929316,0.948714,0.960595,0.968336,0.973091,0.975876,0.977372,0.978072,0.978475,0.979077,0.979950,0.980730,0.982280,0.983586,0.985572,0.987222,0.988758,0.989460,0.989678,0.989728,0.989511,0.989442,0.989508,0.989419,0.989547,0.991192,0.991897,0.991990,0.991844,0.991826,0.992328,0.992060,0.991896,0.992043,0.992026,0.991417,0.991130,0.990842,0.991048,0.990855,0.989203,0.989201}; //original profile from Roger Ulrich, at disk center

float lineprofile45[98] ={1.00391,1.00448,1.00537,1.00534,1.00538,1.00553,1.00567,1.00515,1.00484,1.00458,1.00384,1.00291,1.00148,1.00058,0.999926,0.998906,0.997526,0.996379,0.995958,0.995723,0.996076,0.996137,0.996310,0.995974,0.995705,0.995267,0.995004,0.994715,0.994393,0.993895,0.993235,0.992605,0.992392,0.990756,0.987331,0.980631,0.969781,0.952117,0.926195,0.889543,0.839953,0.777853,0.706090,0.629078,0.554224,0.490055,0.442618,0.417714,0.419243,0.447437,0.500968,0.572437,0.652744,0.732437,0.802353,0.856120,0.896472,0.926850,0.947073,0.960377,0.968769,0.974024,0.977197,0.978859,0.979464,0.979665,0.980069,0.980933,0.982326,0.983639,0.984811,0.986422,0.987440,0.988704,0.989813,0.990314,0.990591,0.990749,0.991216,0.991710,0.992247,0.992572,0.992794,0.993023,0.994427,0.994544,0.994526,0.994284,0.994316,0.993821,0.993642,0.993490,0.992832,0.992035,0.991620,0.990701,0.990598,0.991006};

float lineprofile60[98] ={1.00385,1.00464,1.00515,1.00554,1.00511,1.00547,1.00529,1.00485,1.00449,1.00401,1.00308,1.00209,1.00092,0.999794,0.999266,0.998074,0.997084,0.995469,0.995278,0.995446,0.995702,0.995720,0.995649,0.995616,0.994924,0.994406,0.994285,0.994000,0.993230,0.992485,0.991387,0.989238,0.986354,0.981636,0.973618,0.961482,0.943974,0.920111,0.888135,0.847520,0.797651,0.739986,0.677951,0.615385,0.558416,0.511432,0.477672,0.460486,0.460973,0.480296,0.518138,0.571508,0.635503,0.703607,0.768989,0.827190,0.874685,0.910921,0.936821,0.954723,0.966197,0.972945,0.977044,0.979295,0.979871,0.980277,0.980732,0.981306,0.982846,0.984197,0.985302,0.986847,0.987916,0.989406,0.990105,0.990938,0.991718,0.991600,0.992072,0.992811,0.993348,0.993541,0.993844,0.993738,0.995480,0.995176,0.995551,0.995160,0.994802,0.994830,0.994589,0.993867,0.992855,0.992846,0.991849,0.990751,0.990451,0.991012};

float wavelength[69] = {-0.295290,-0.285280,-0.275270,-0.265260,-0.255250,-0.245240,-0.235230,-0.225220,-0.215210,-0.205200,-0.195190,-0.185180,-0.175170,-0.165160,-0.155150,-0.145140,-0.135130,-0.125120,-0.115110,-0.105100,-0.0950900,-0.0850800,-0.0750700,-0.0650600,-0.0550500,-0.0450400,-0.0350300,-0.0250200,-0.0150100,-0.00500000,0.00501000,0.0150200,0.0250300,0.0350400,0.0450500,0.0550600,0.0650700,0.0750800,0.0850900,0.0951000,0.105110,0.115120,0.125130,0.135140,0.145150,0.155160,0.165170,0.175180,0.185190,0.195200,0.205210,0.215220,0.225230,0.235240,0.245250,0.255260,0.265270,0.275280,0.285290,0.295300,0.305310,0.315320,0.325330,0.335340,0.345350,0.355360,0.365370,0.375380,0.385390};

float lineprofile0[69] ={1.00000,1.000040,1.000240,1.000480,1.000860,1.001110,1.001570,1.001670,1.001360,1.00077,1.000280,1.000060,1.000150,1.000100,1.000240,1.000030,0.999644,0.998513,0.995318,0.987144,0.970869,0.942045,0.895890,0.829729,0.745487,0.649436,0.551064,0.462646,0.394589,0.354200,0.348436,0.381755,0.454196,0.556481,0.668919,0.771158,0.850152,0.903043,0.935533,0.954931,0.966812,0.974553,0.979308,0.982093,0.983589,0.984289,0.984692,0.985294,0.986167,0.986947,0.988497,0.989803,0.991789,0.993439,0.994975,0.995677,0.995895,0.995945,0.995728,0.995659,0.995725,0.995636,0.995764,0.997409,0.998114,0.998207,0.998061,0.998043,0.998545}; //profile at disk center after removal of some wavelengths for which the intensity was far from the continuum value (1.0)


//prototype of function(s)

int Dopplergram(DRMS_Array_t **arrLev1p,DRMS_Array_t **arrLev15,int framelistSize,DRMS_Array_t *Lookuptable,float Rsun,float X0,float Y0,struct parameterDoppler DopplerParameters,int *MISSVALS,int *SATVALS, float cdelt1, TIME TargetTime);

int Dopplergram2(DRMS_Array_t **arrLev1p,DRMS_Array_t **arrLev15,int framelistSize,DRMS_Array_t *Lookuptable,float Rsun,float X0,float Y0,struct parameterDoppler DopplerParameters,int *MISSVALS,int *SATVALS, float cdelt1);
