  for (j=0; j<ny; j++) {
    xinp=xin+j*nlead;
    vsModf(nx,xinp,ixins,fxins);
    scopy(&nx,fxins,&ione,helpf,&ione);
    sscal(&nx,&pars->fover,helpf,&ione);
    vsModf(nx,helpf,ixin1s,fxin1s);
    yinp=yin+j*nlead;
    vsModf(nx,yinp,iyins,fyins);
    scopy(&nx,fyins,&ione,helpf,&ione);
    sscal(&nx,&pars->fover,helpf,&ione);
    vsModf(nx,helpf,iyin1s,fyin1s);
    for (i=0; i<nx; i++) {
      ixin=(int)ixins[i]; // Integer pixel to interpolate to
      iyin=(int)iyins[i]; // Integer pixel to interpolate to
      if ((ixin>=(OOO2-1)) && (ixin <(nxin-OOO2)) && (iyin>=(OOO2-1)) && (iyin <(nyin-OOO2))) {
//      count=count+1;

        fxin1=fxin1s[i];
        ixin1=(int)ixin1s[i];
        fyin1=fyin1s[i];
        iyin1=(int)iyin1s[i];
        fxin2=1.0f-fxin1;
        fyin2=1.0f-fyin1;
  
/* Brute force addition */

        xk1=kerso+ixin1*pars->maxorder;
        xk2=xk1+pars->maxorder;
        yk1=kerso+iyin1*pars->maxorder;
        yk2=yk1+pars->maxorder;
        imp=image_in+ixin-OOO2+1+nleadin*(iyin-OOO2+1);

        for (i1=0; i1<OOO1; i1++) xker[i1]=fxin2*xk1[i1]+fxin1*xk2[i1];
        sum=0.0f;
        for (i1=0; i1<OOO1; i1++) {
          sum1=0.0f;
          for (j1=0; j1<OOO1; j1=j1+2) sum1=sum1+xker[j1]*imp[j1]+xker[j1+1]*imp[j1+1];
          sum=sum+sum1*(fyin2*yk1[i1]+fyin1*yk2[i1]);
          imp=imp+nleadin;
        }
        image_out[i+nlead*j]=sum;
      } // if
// Ought to do something here.
    } // i=
  } //j=
